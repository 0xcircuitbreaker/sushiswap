sources:
  - name: Trident
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:sushi-v2/trident-optimism}
    transforms:
      - autoPagination:
          validateSchema: true
  - name: SushiSwapV2
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:sushi-v2/sushiswap-ethereum}
    transforms:
      - autoPagination:
          validateSchema: true
      - filterSchema:
          mode: wrap
          filters:
            - Type.!{Factory}
  - name: SushiSwapV3
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:olastenberg/v3-arbitrum}
    transforms:
      - autoPagination:
          validateSchema: true
      - prefix:
          value: V3_
          includeRootOperations: true
          includeTypes: true
          ignore:
            - _SubgraphErrorPolicy_
      # - filterSchema:
      #     mode: wrap
      #     filters:
      #       - Type.!{Factory}
  - name: MasterChef
    handler:
      graphql:
        endpoint: https://api.thegraph.com/subgraphs/name/sushiswap/masterchef-v2-ethereum
    transforms:
      - prefix:
          value: MasterChef_
          includeRootOperations: true
          includeTypes: true
  - name: MiniChef
    handler:
      graphql:
        endpoint: https://{context.host:api.thegraph.com/subgraphs/name}/{context.name:jiro-ono/minichef-staging-updates}
    transforms:
      - prefix:
          value: MiniChef_
          includeRootOperations: true
          includeTypes: true
# Had to disable global transforms since we have a jsonSchema handler in here now...
transforms:
  - autoPagination:
      validateSchema: false
  - autoTypeMerging: true
  - addSourceName: true

documents:
  - ./query.graphql

codegen:
  contextType: 'MeshContext & { chainId: string; subgraphName: string; subgraphHost: string }'

